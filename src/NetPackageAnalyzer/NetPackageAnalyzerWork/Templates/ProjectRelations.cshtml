@inherits RazorBlade.PlainTextTemplate<ProjectData>;
@{
    var nameCsproj = Model.NameCSproj();
    var relativePath = Model.RelativePath();
    var name = Model.FullNameMermaid();
    var prefix = GlobalsForGenerating.globalPrefix();

}
---
sidebar_position: 10
---

# Project references for @nameCsproj

## Downstream @Model.ProjectsReferences.Count, Upstream : @Model.UpStreamProjectReferences.Count

@if(Model.AlphabeticalProjectsReferences.Length>0)
{
<text>
# Project relations for @nameCsproj

```mermaid
flowchart     

@name

%% find a way to interpret first the path
%% click @nameCsproj "@prefix/Projects/@nameCsproj/ProjectReferences" "@relativePath"

@foreach (var rel in Model.AlphabeticalProjectsReferences)
{
<text>
@rel.FullNameMermaid()

@nameCsproj-->@rel.NameCSproj()

%% find a way to interpret first the path
%% click @rel.NameCSproj() "@prefix/Projects/@rel.NameCSproj()/ProjectReferences" "@rel.RelativePath()"


</text>
}

```

@foreach (var rel in Model.AlphabeticalProjectsReferences)
{
    <text>
        [@rel.NameCSproj()](@prefix/Projects/@rel.NameCSproj()/ProjectReferences)
    </text>
}

</text>
}

@if (Model.AlphabeticalUpStreamProjectReferences.Length>0){
<text>
# Projects that reference @nameCsproj
```mermaid
flowchart 

@name

%% find a way to interpret first the path
%% click @nameCsproj "@prefix/Projects/@nameCsproj/ProjectReferences" "@relativePath"

@foreach (var rel in Model.AlphabeticalUpStreamProjectReferences)
{
<text>
@rel.FullNameMermaid()

%% find a way to interpret first the path
%% click @rel.NameCSproj() "@prefix/Projects/@rel.NameCSproj()/ProjectReferences" "@rel.RelativePath()"

@rel.NameCSproj()-->@nameCsproj
</text>
}

```

@foreach (var rel in Model.AlphabeticalUpStreamProjectReferences)
{
    <text>
        [@rel.NameCSproj()](@prefix/Projects/@rel.NameCSproj()/ProjectReferences)
    </text>
}

</text>
}

@if (Model.AlphabeticalProjectsReferences.Length>0){

<text>
# Full Project relations for @nameCsproj

```mermaid
flowchart 

@name
%% click @nameCsproj "@prefix/Projects/@nameCsproj/ProjectReferences" "@relativePath"

@foreach (var rel in Model.AlphabeticalProjectsReferences)
{
    var recModel = new Tuple<string, ProjectData>(nameCsproj, rel);
    var rec = new SimpleDisplayProjectWithReferencesProject(recModel);
    var data = rec.Render();
    @data

}

```
</text>
}

[Packages](Packages)


[Back To Solution](@prefix/ProjectRelation)

<small>Generated  by https://www.nuget.org/packages/NetPackageAnalyzerConsole </small>

