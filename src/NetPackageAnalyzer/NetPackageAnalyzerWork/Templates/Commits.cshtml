@inherits RazorBlade.PlainTextTemplate<ProjectsDict>;
@{
    var prefix = GlobalsForGenerating.globalPrefix();
    //var nrToTake = 2;
}
---
sidebar_position: 30
---

# Commits Analysis

## All time 

### Number commits per year
@{
    var yearCommitsFolder = Model.CommitsPerYearFolder();
    var xaxis= "["+
    string.Join(',',yearCommitsFolder
        .Select(it=>it.Key)
        .OrderBy(x=>x)
        .ToArray()) +"]";
    var maxCommit= yearCommitsFolder.Max(x=>x.Value);
    var commitsFolder="["+string.Join(',',yearCommitsFolder
        .Select(it=>it)
        .OrderBy(x=>x.Key)
        .Select(x=>x.Value)
        .ToArray()) +"]";
    var CommitsFile ="["+string.Join(',',Model.CommitsPerYearFile()
        .Select(it=>it)
        .OrderBy(x=>x.Key)
        .Select(x=>x.Value)
        .ToArray()) +"]";
}

```mermaid
xychart-beta
title "Commits per year"
x-axis @xaxis
y-axis "" 0--> @maxCommit
bar @commitsFolder
line @CommitsFile
```

@{
    CommitsWithMaxFilesPerYear cMaxFiles = new CommitsWithMaxFilesPerYear(Model);

}

### Commits with most files per year

@cMaxFiles.Render()




### Top Number commits per file 

@{
    var top10Files = Model
    .FilesWithMaxCommits(null)
    .OrderByDescending(x => x.Value)
    .ToArray()
    ;
    var medianCommits = Model.MedianCommits(null);
    var renderFiles = new DisplayCommitsFiles(Tuple.Create( top10Files,medianCommits));


}

@renderFiles.Render()


### Number commits per csproj files

@{
    Tuple<ProjectsDict, Func<ProjectData, NetPackageAnalyzeHistory.History>> newModel=
    new(Model, x => x.AllHistoryFile.AllHistory());
    var c = new CommitsPerData(newModel);
    var data = c.Render();
}

@data



### Number commits per folder

@{
    newModel =
    new(Model, x => x.AllHistoryFolder.AllHistory());
    c = new CommitsPerData(newModel);
    data = c.Render();
}

@data
@{
    var maxYear = Model.MaxYearCommits();
    var minYear= Model.MinYearCommits();
}

@for(var year = maxYear; year >= minYear; year--)
{
 
    newModel =
    new(Model, x => x.AllHistoryFileYear(year));
    c = new CommitsPerData(newModel);
    data = c.Render();
<text>
## YEAR @year

### Number commits per csproj file
@data

### Number commits per file

@{
    top10Files = Model
    .FilesWithMaxCommits(year)
    .OrderByDescending(x => x.Value)
    .ToArray()
    ;
    medianCommits = Model.MedianCommits(year);

    renderFiles = new DisplayCommitsFiles(Tuple.Create( top10Files,medianCommits));

}

@renderFiles.Render()


### Number commits per folder

@{
    newModel =
    new(Model, x => x.AllHistoryFolderYear(year));
    c = new CommitsPerData(newModel);
    data = c.Render();
}

@data
</text>

}
<small>Generated  by https://www.nuget.org/packages/NetPackageAnalyzerConsole </small>