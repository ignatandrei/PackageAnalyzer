@inherits RazorBlade.PlainTextTemplate<Tuple<NamePerCount[],string>>;
@{
    var nameCount = Model.Item1??[];
    if(nameCount.Count() == 0)
    {
        return;
    }
    if(nameCount.Count() > 20)
    {
        nameCount = nameCount.Take(15).ToArray();
    }
    string name = Model.Item2;
    string nameId= name.Replace(" ", "-");
    int maxPage = nameCount.Length < 10 ? 10 : nameCount.Length;
    int nrSplit = maxPage > 100 ? 100 : 10;
    var chunk = Enumerable.Chunk(Enumerable.Range(1, maxPage), nrSplit);
    var pages = string.Join(",", chunk.Select(it => it.Last()));

    int height = 100+nameCount.Count() * 20;
    var xaxis = "[" +
        string.Join(',', nameCount
            .Select(it => it.Name)
            .Select(it => it.Replace("<", "#60;"))
            .Select(it => it.Replace(">", "#62;"))
            .Select(it => "\"" + it + "\"")
            .ToArray())
        + "]";
    var maxCount = nameCount.Max(it => it.Count);
    var yAxis = "[" + string.Join(',', nameCount.Select(it => it.Count).ToArray()) + "]";
}

<div class="mermaid">
---
config:
    xyChart:
        width: 900
        height: @height
    themeVariables:
        xyChart:
            titleColor: "#ff0000"
---

xychart-beta horizontal
title "@name"
x-axis @xaxis
y-axis "" 0--> @maxCount
bar @yAxis

</div>
<br />
<div id="@(nameId+"-table")"></div>

<script>
    var tabledata = [
    @foreach (var item in nameCount)
    {
        <text>
                {"Name": "@item.Name", "Nr": "@item.Count" },
        </text>
    }
                                ];
    var table = new Tabulator("@("#" + nameId + "-table")", {
        data: tabledata,
        layout: "fitColumns",
        pagination: "local",
        paginationSize: 10,
        paginationSizeSelector: [@pages],
        movableColumns: true,
        paginationCounter: "rows",
        columns: [
            { formatter: "rownum", hozAlign: "center", width: 40 },
            { title: "Name", field: "Name", headerFilter: "input" },
            { title: "@name", field: "Nr", headerFilter: "input" },
        ],
    });

</script>
