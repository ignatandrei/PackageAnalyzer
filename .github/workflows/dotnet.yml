# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*' ] # Listen for tag pushes that match version tags
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    # runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          8.0.x
          9.0.x
    # - name: setup node
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '20.9.0'
    - name: Restore dependencies
      run: |
        dotnet tool install --global PowerShell
        cd src
        cd NetPackageAnalyzer
        dotnet restore
          dotnet build /p:EmitCompilerGeneratedFiles=true --disable-build-servers --force
        # dotnet build --no-restore
    - name: Build
      run: |
        dotnet tool install --global PowerShell
        cd src
        cd NetPackageAnalyzer        
        cd NetPackageAnalyzerConsole
        dotnet pack -o ../../nugetPackages       
    - name: Build site
      run: |
        dotnet tool install --global PowerShell
        cd src
        cd NetPackageAnalyzer
        cd NetPackageAnalyzerConsole
        cd bin
        cd Debug
        # copy to another folder to run
        cp -r ./net9.0 ./test
        cd test
        ./NetPackageAnalyzerConsole generateFiles -wg Docusaurus --folder ${{ github.workspace }}/src/NetPackageAnalyzer/ 
        cd ${{ github.workspace }}/src/NetPackageAnalyzer/
        cd Analysis
        npm install
        npm run build
        # ./NetPackageAnalyzerConsole generateFiles -wg HtmlSummary --folder ${{ github.workspace }}/src/NetPackageAnalyzer/ 

    - name: 'Upload nuget'
      uses: actions/upload-artifact@v4
      with:
        name: Nuget_${{github.run_number}}
        path: src/nugetPackages
        retention-days: 1
  
    - name: push to nuget
      if: startsWith(github.ref, 'refs/tags/v') # This line ensures the step runs only if a tag version is present
      run: |
        dir src/nugetPackages/*.*
        echo '1'
        dir src/nugetPackages/*.symbols.nupkg  
        echo '2'
        cd src
        cd nugetPackages
        dotnet nuget push "*.symbols.nupkg" --api-key  ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json
    
